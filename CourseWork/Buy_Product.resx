<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>